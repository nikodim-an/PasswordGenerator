#!/usr/bin/python3
# -*- coding: utf-8 -*-
## autoinstaller пароли

##########################################################################################
#
# Генератор паролей для интернет-сервисов
# 
# для нормальной работы необходимо создать ссылку в бинах, которая будет открываться в тер
# минале. Например «пароли» если передать параметр год то сгенерирует на него, а если не п
# ередавать - то на текущий. Пароли уникальны в рамках одного года.
#
# Эта хрень (я про скрипт) полностью настраивается. Отбор и формирование пароля происходит 
# из списка points. Если нужно увеличить сложность пароля, просто 
# добавь элементов в указанный список. меня он устраивает и так... пароль можно легко 
# запомнить, но его трудно подобрать.
#
# Автор: А.Хильченко (iQUtils@mail.ru)
#
##########################################################################################

import sys
import datetime

dt=datetime.datetime.now()
year = dt.year
if len(sys.argv) > 1:
    year = str(sys.argv[1])
# настройки
filename = 'пароли на %s год' % year
suffix = {  'Почтовые ящики': 'тут будет пароль дял почтовых ящиков', 
            'Банки':'деньги-деньги', 'Форумы':'форумы, мы-немы', 
            'Торент трекеры':'пароли для скачивания видяшек, музяшек и прочей ерунды',
            'Программирование':'о а тут будет пароль к гитхабу',
            'Библиотеки':'почитать мы любим',
            'Игры':'танки чтоль???',
            'Сыночка':'Пароли дял сервисов любимого сына',
            'Дочечка':'Пароли дял сервисов любимой деченьки',
            'Прочие пароли':'прочие пароли - всякая хрень', 
            'Для оперативной замены «засвеченных»':'Чтобы было на что заменить скомпроментированный пароль'
             }
passwords, g_passwords={}, {}
key = str(year)+'Меня зовут Вова, я знаю три слова...'
lenght = 4
points = [7,12] # четные и нечетные позиции
# тело
import hashlib
for i in suffix:
    p = key+suffix[i]
    p = bytes(p,encoding='utf-8')
    password = hashlib.md5(p).hexdigest()
    g_passwords.update({i:password})
#print(g_passwords)
for i in g_passwords:
    p = g_passwords[i]
    res = []
    for j in points:
        s = p[j:j+lenght]
        if divmod(j,2)[1]!=0: # заглавные буквы для нечетных позиций
            s=s.upper()
        res.append(s)
    password = '_'.join(res)
    passwords.update({i:password})
# покажем пароли
print('Пароли, действующие в %s году:' % year)
resStr = 'Пароли, действующие в %s году:\n' % year
for i in passwords:
    print('\t',passwords[i],'-',i)
    resStr+='\t'+passwords[i]+' - '+i+'\n'
if len(sys.argv) > 1:
    with open(filename, 'w') as f:
        f.write(resStr)



